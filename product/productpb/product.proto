//     Digota <http://digota.com> - eCommerce microservice
//     Copyright (C) 2017  Yaron Sumel <yaron@digota.com>. All Rights Reserved.
//
//     This program is free software: you can redistribute it and/or modify
//     it under the terms of the GNU Affero General Public License as published
//     by the Free Software Foundation, either version 3 of the License, or
//     (at your option) any later version.
//
//     This program is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU Affero General Public License for more details.
//
//     You should have received a copy of the GNU Affero General Public License
//     along with this program.  If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";

option go_package = "github.com/synthecypher/digota/product/productpb";

package productpb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/synthecypher/digota/sku/skupb/sku.proto";

service ProductService {
    rpc New (NewRequest) returns (Product) {
    }
    rpc Get (GetRequest) returns (Product) {
    }
    rpc Update (UpdateRequest) returns (Product) {
    }
    rpc List (ListRequest) returns (ProductList) {
    }
    rpc Delete (DeleteRequest) returns (Empty) {
    }
}

message Empty {}

message Product {
    string id = 1 [(gogoproto.moretags) = "bson:\"_id\""];
    string name = 2;
    bool active = 3;
    repeated string attributes = 4 ;
    string description = 5 ;
    repeated string images = 6 ;
    map<string, string> metadata = 7 ;
    bool shippable = 8 ;
    string url = 9 ;
    repeated skupb.Sku skus = 10;
    int64 created = 998 ;
    int64 updated = 999 ;
}

message ProductList {
    repeated Product products = 1;
    int32 total =2;
}

message NewRequest {
    string name = 1 [(gogoproto.moretags) = "validate:\"required,gte=0\""];
    bool active = 2 [(gogoproto.moretags) = "validate:\"required\""];
    repeated string attributes = 3 [(gogoproto.moretags) = "validate:\"dive,required\""];
    string description = 4 [(gogoproto.moretags) = "validate:\"gt=0,lt=2056\""];
    repeated string images = 5 [(gogoproto.moretags) = "validate:\"dive,url\""];
    map<string, string> metadata = 6 [(gogoproto.moretags) = "validate:\"\""];
    bool shippable = 7 [(gogoproto.moretags) = "validate:\"\""];
    string url = 8 [(gogoproto.moretags) = "validate:\"omitempty,url\""];
}

message GetRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"required,uuid4\""];
}

message DeleteRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"required,uuid4\""];
}

message UpdateRequest {
    string id = 1 [(gogoproto.moretags) = "validate:\"required,uuid4\""];
    string name = 2 [(gogoproto.moretags) = "validate:\"required,gte=4\""];
    bool active = 3 [(gogoproto.moretags) = "validate:\"omitempty,required\""];
    repeated string attributes = 4 [(gogoproto.moretags) = "validate:\"dive,required\""];
    string description = 5 [(gogoproto.moretags) = "validate:\"gt=0,lt=2056\""];
    repeated string images = 6 [(gogoproto.moretags) = "validate:\"dive,url\""];
    map<string, string> metadata = 7 [(gogoproto.moretags) = "validate:\"\""];
    bool shippable = 8 [(gogoproto.moretags) = "validate:\"\""];
    string url = 9 [(gogoproto.moretags) = "validate:\"omitempty,url\""];
}

message ListRequest {
    int64 page = 1;
    int64 limit = 2;
}